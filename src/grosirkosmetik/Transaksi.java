/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package grosirkosmetik;

import java.awt.*;
import java.io.*;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.*;

/**
 *
 * @author rafiadji
 */
public class Transaksi extends javax.swing.JFrame {
    
    private Node head = null;
    Koneksi conn;
    DefaultTableModel TableP, TableChrt;
    String id_pro;
    /**
     * Creates new form Transaksi
     */
    public Transaksi() {
        initComponents();
        conn = new Koneksi();
        loadTablePro(null);
        loadTableChart();
        BTransSelesai.setVisible(false);
        BHapusItem.setVisible(false);
    }
    
    // Begin Trans Link List
    public void to_Empty(){
        head = null;
    }
    public void append(String[] val){
        Node lastNode = getLastNode();
        if(lastNode == null){
            head = new Node(val);
        }
        else{
            boolean cek = true;
            Node currNode = head;
            while(currNode != null && cek){
                if(currNode.data[0].equalsIgnoreCase(val[0])){
                    cek = false;
                }
                currNode = currNode.next;
            }
            if(cek){
                lastNode.next = new Node(val);
            }
            else{
                currNode.data = val;
            }
            
        }
    }
    
    public void delete(String val){
        if(head == null){
            return;
        }
        Node prevNode = null;
        Node currNode = head;
        while(currNode != null && currNode.data[0] != val){
            prevNode = currNode;
            currNode = currNode.next;
        }
        
        if(prevNode == null){
            head = head.next;
            return;
        }
        if(currNode == null){
            System.out.println("A Node with that value does not exist");
            return;
        }
        prevNode.next = currNode.next;
    }
    
    private Node getLastNode(){
        if(head == null){
            return null;
        }
        Node tmpNode = head;
        while(tmpNode.next != null){
            tmpNode = tmpNode.next;
        }
        return tmpNode;
    }
    // End Trans Link List
    
    public void hitungTot(){
        int tot = 0;
        if(head == null){
            tot = 0;
        }
        Node tmpNode = head;
        while(tmpNode != null){
            tot = tot + Integer.parseInt(tmpNode.data[4]);
            tmpNode = tmpNode.next;
        }
        LTotVal.setText(""+tot);
    }
    public void loadTablePro(String cari){
        Object[] field = {"ID Produk","Produk","Harga","Stok"};
        TableP = new DefaultTableModel(null, field);
        TabelPro.setModel(TableP);
        
        try{
            ResultSet tpro;
            if(cari != null){
                tpro = conn.select("SELECT * FROM produk WHERE PRODUK LIKE '%"+cari+"%' OR ID_PRODUK LIKE '%"+cari+"%'");
            }
            else{
                tpro = conn.select("SELECT * FROM produk");
            }
            
            while(tpro.next()){
                String id_produk = tpro.getString("ID_PRODUK");
                String produk = tpro.getString("PRODUK");
                String harga = tpro.getString("HARGA");
                String Stok = tpro.getString("STOK");
                String[] data = {id_produk, produk, harga, Stok};
                TableP.addRow(data);
            }
        }
        catch(Exception e){
            System.out.println(e);
        }
    }
    
    public void loadTableChart(){
        Object[] field = {"ID Produk","Produk","Harga","Jumlah Beli","Sub Total"};
        TableChrt = new DefaultTableModel(null, field);
        TabelChart.setModel(TableChrt);
        
        if(head == null){
            return;
        }
        Node tmpNode = head;
        while(tmpNode != null){
            TableChrt.addRow(tmpNode.data);
            tmpNode = tmpNode.next;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LNoTrans = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabelPro = new javax.swing.JTable();
        LCariBarang = new javax.swing.JLabel();
        TCari = new javax.swing.JTextField();
        BTambahItem = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TabelChart = new javax.swing.JTable();
        LTot = new javax.swing.JLabel();
        BTransSelesai = new javax.swing.JButton();
        TJumPro = new javax.swing.JTextField();
        LJumlahPro = new javax.swing.JLabel();
        LTotVal = new javax.swing.JLabel();
        BKeluar = new javax.swing.JButton();
        BHapusItem = new javax.swing.JButton();
        BTransBaru = new javax.swing.JButton();
        LNoTransVal = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Transaksi");

        LNoTrans.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LNoTrans.setText("No Transaksi");

        TabelPro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        TabelPro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelProMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TabelPro);

        LCariBarang.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LCariBarang.setText("Cari Barang");

        TCari.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        TCari.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TCariKeyReleased(evt);
            }
        });

        BTambahItem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BTambahItem.setText("Tambah Item");
        BTambahItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTambahItemActionPerformed(evt);
            }
        });

        TabelChart.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        TabelChart.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelChartMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TabelChart);

        LTot.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LTot.setText("Total");

        BTransSelesai.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BTransSelesai.setText("Transaksi Selesai");
        BTransSelesai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTransSelesaiActionPerformed(evt);
            }
        });

        LJumlahPro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        LJumlahPro.setText("Jumlah Beli");

        LTotVal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        BKeluar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BKeluar.setText("Keluar");
        BKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BKeluarActionPerformed(evt);
            }
        });

        BHapusItem.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BHapusItem.setText("Hapus Item");
        BHapusItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BHapusItemActionPerformed(evt);
            }
        });

        BTransBaru.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BTransBaru.setText("Transaksi Baru");
        BTransBaru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTransBaruActionPerformed(evt);
            }
        });

        LNoTransVal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(BTransSelesai, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LTot)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(LTotVal))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LJumlahPro)
                                .addGap(18, 18, 18)
                                .addComponent(TJumPro, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BTambahItem, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BHapusItem, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LNoTrans)
                                .addGap(18, 18, 18)
                                .addComponent(LNoTransVal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BTransBaru))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(LCariBarang)
                                .addGap(26, 26, 26)
                                .addComponent(TCari, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BKeluar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LNoTrans)
                    .addComponent(BTransBaru)
                    .addComponent(LNoTransVal)
                    .addComponent(BKeluar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LCariBarang)
                    .addComponent(TCari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TJumPro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LJumlahPro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BTambahItem)
                    .addComponent(BHapusItem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(LTot)
                        .addComponent(LTotVal))
                    .addComponent(BTransSelesai))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TCariKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TCariKeyReleased
        loadTablePro(TCari.getText());
    }//GEN-LAST:event_TCariKeyReleased

    private void TabelProMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelProMouseClicked
        id_pro = null;
        TJumPro.setText("");
        int row = TabelPro.getSelectedRow();
        String getData = (TabelPro.getModel().getValueAt(row, 0).toString());
        id_pro = getData;
    }//GEN-LAST:event_TabelProMouseClicked

    private void BTambahItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTambahItemActionPerformed
        try{
            ResultSet tch = conn.select("SELECT * FROM produk WHERE ID_PRODUK = "+id_pro);
            if(tch.next()){
                String id_produk = tch.getString("ID_PRODUK");
                String produk = tch.getString("PRODUK");
                String harga = tch.getString("HARGA");
                String qty = TJumPro.getText();
                if (Integer.parseInt(qty) <= tch.getInt("STOK")){
                    int sub = tch.getInt("HARGA") * Integer.parseInt(qty);
                    String[] data = {id_produk, produk, harga, qty, ""+sub};
                    append(data);
                    loadTableChart();
                    hitungTot();
                    TJumPro.setText(""); 
                }
                else{
                    JOptionPane.showMessageDialog(null, "Maaf Jumlah pembelian melebihi Stok, Silahkan isi kembali !");
                }
            }  
        }
        catch(Exception e){
            
        }
    }//GEN-LAST:event_BTambahItemActionPerformed

    private void BTransBaruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTransBaruActionPerformed
        try{
            ResultSet tkar = conn.select("SELECT ID_KARYAWAN FROM karyawan WHERE USERNAME = '"+GrosirKosmetik.username+"'");
            if(tkar.next()){
                String[][] data = {
                    {"ID_KARYAWAN", tkar.getString("ID_KARYAWAN")}
                };
                boolean insert = conn.insert("transaksi", data);
                if(insert){
                    ResultSet ttra = conn.select("SELECT ID_TRANS FROM transaksi ORDER BY ID_TRANS DESC");
                    if(ttra.next()){
                        LNoTransVal.setText(ttra.getString("ID_TRANS"));
                    }
                    BKeluar.setVisible(false);
                    BTransBaru.setVisible(false);
                    BTransSelesai.setVisible(true);
                }
                
            }
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_BTransBaruActionPerformed

    private void BTransSelesaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTransSelesaiActionPerformed
        try{
            ResultSet jam = conn.select("SELECT NOW() as tgl");
            String tanggal_trans = null;
            if(jam.next()){
                tanggal_trans = jam.getString("tgl");
            }
            String no_trans = LNoTransVal.getText();
            String total = LTotVal.getText();
            if(head == null){
                return;
            }
            Node tmpNode = head;
            while(tmpNode != null){
                String id_prod = tmpNode.data[0];
                String jml_beli = tmpNode.data[3];
                String sub_tot = tmpNode.data[4];
                String[][] data = {
                    {"ID_TRANS", no_trans},
                    {"ID_PRODUK", id_prod},
                    {"JML_BELI", jml_beli},
                    {"SUB_TOTAL", sub_tot}
                };
                conn.insert("detail_transaksi", data);
                ResultSet stk = conn.select("SELECT STOK FROM produk WHERE ID_PRODUK = '"+id_prod+"'");
                if(stk.next()){
                    int stok = stk.getInt("STOK");
                    int kurang = stok - Integer.parseInt(jml_beli);
                    String[][] dataprod = {
                        {"STOK", ""+kurang},
                    };
                    String[] where = {"ID_PRODUK", id_prod};
                    boolean update = conn.update("produk", dataprod, where);
                }
                tmpNode = tmpNode.next;
            }
            String[][] data = {
                {"TANGGAL_TRANS", tanggal_trans},
                {"TOTAL", total}
            };
            String[] where = {"ID_TRANS", no_trans};
            boolean update = conn.update("transaksi", data, where);
            if(update){
                String bayar;
                do{
                    bayar = JOptionPane.showInputDialog("Total pembelian : Rp "+total+"\nmasukkan jumlah bayar");
                    if(bayar != null){
                        int kembali = Integer.parseInt(bayar) - Integer.parseInt(total);
                        JOptionPane.showMessageDialog(null, "Uang kembali : "+kembali+"\nTransaksi Berhasil");
                        printStruk p = new printStruk(no_trans, bayar, kembali);
                        File fl = new File("E:/java project/GrosirKosmetik/print.txt");
                        Desktop.getDesktop().open(fl);
                        LNoTransVal.setText("");
                        TCari.setText("");
                        TJumPro.setText("");
                        LTotVal.setText("");
                        to_Empty();
                        loadTablePro(null);
                        loadTableChart();
                        BTransBaru.setVisible(true);
                        BTransSelesai.setVisible(false);
                        BKeluar.setVisible(true);    
                    }
                    else{
                        JOptionPane.showMessageDialog(null, "Pembayaran harap diisi !");
                    }
                }while(bayar == null);
                
            }
        }
        catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_BTransSelesaiActionPerformed

    private void BKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BKeluarActionPerformed
        Menu mn = new Menu();
        mn.setVisible(true);
        mn.setLocationRelativeTo(null);
        mn.setDefaultCloseOperation(Login.DO_NOTHING_ON_CLOSE);
        this.dispose();
    }//GEN-LAST:event_BKeluarActionPerformed

    private void TabelChartMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelChartMouseClicked
        id_pro = null;
        BTambahItem.setVisible(false);
        BHapusItem.setVisible(true);
        int row = TabelChart.getSelectedRow();
        String getData = (TabelChart.getModel().getValueAt(row, 0).toString());
        id_pro = getData;
    }//GEN-LAST:event_TabelChartMouseClicked

    private void BHapusItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BHapusItemActionPerformed
        delete(id_pro);
        loadTablePro(null);
        loadTableChart();
        hitungTot();
        BTambahItem.setVisible(true);
        BHapusItem.setVisible(false);
    }//GEN-LAST:event_BHapusItemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BHapusItem;
    private javax.swing.JButton BKeluar;
    private javax.swing.JButton BTambahItem;
    private javax.swing.JButton BTransBaru;
    private javax.swing.JButton BTransSelesai;
    private javax.swing.JLabel LCariBarang;
    private javax.swing.JLabel LJumlahPro;
    private javax.swing.JLabel LNoTrans;
    private javax.swing.JLabel LNoTransVal;
    private javax.swing.JLabel LTot;
    private javax.swing.JLabel LTotVal;
    private javax.swing.JTextField TCari;
    private javax.swing.JTextField TJumPro;
    private javax.swing.JTable TabelChart;
    private javax.swing.JTable TabelPro;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
